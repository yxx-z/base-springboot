spring:
  application:
    name: business
  config:
    activate:
      on-profile: dev
  # mysql 通用配置信息内容 使用HikariDataSource连接池
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/base_springboot?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&useSSL=false&serverTimezone=Asia/Shanghai
    username: root
    password: admin123
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      minimum-idle: 10
      maximum-pool-size: 20
      auto-commit: true
      idle-timeout: 30000
      pool-name: HikariCP
      max-lifetime: 1800000
      connection-timeout: 30000
      connection-test-query: SELECT 1
  # 请求大小
  servlet:
    multipart:
      max-file-size: 30MB
      max-request-size: 30MB
  # redis 配置内容
  redis:
    # 设置初始数据库的数据为8
    database: 8
    host: 127.0.0.1
    port: 6379
#    password:
    jedis:
      pool:
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 50
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: 3000ms
        # 连接池中的最大空闲连接数
        max-idle: 20
        # 连接池中的最小空闲连接数
        min-idle: 5
    # 连接超时时间（毫秒）
    timeout: 5000ms
  # 邮箱
  mail:
    # 编码
    default-encoding: UTF-8
    # 邮件服务器
    host: smtp.email.cn
    # 用户名(一般为邮箱号)
    username: shuniversity@email.cn
    # 邮件服务器端口
    port: 25
    # 专用密码
    password: 2BCZKEGQgHyCZ5i4

# 邮箱设置
mail:
  # 发件人邮箱
  from: shuniversity@email.cn
  # 发件人名称
  from-name: SpringBoot开发模版
  # 注册时邮箱验证码有效期
  register-time: 5
  # 一个邮箱每日最大注册次数 (防止恶意发送邮件)
  register-max: 3
  # 注册邮件正文
  registerContent: 你正在注册xxxx账号，验证码为 %d,有效期 %d 分钟，妥善保管请勿泄露。如果不是您本人发送，请不必理会。

# 找回密码
reset-password:
  # 找回密码页面url
  base-path: http://127.0.0.1
  # 每日找回密码最大次数 (防止恶意发送邮件)
  max-number: 3
  # 找回密码邮件正文
  reset-pwd-content: 请勿回复本邮件.点击下面的链接,重设密码<br/><br/> <a href=%s target='_BLANK'>点击我重新设置密码</a> <br/><br/> tips:本邮件超过15分钟,链接将会失效，需要重新申请'找回密码'

# mybatis-plus开发日志打印内容
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl
  global-config:
    db-config:
      logic-delete-field: is_delete
      logic-delete-value: 1
      logic-not-delete-value: 0
    banner: false

# Sa-Token配置
sa-token:
  # token名称 (同时也是cookie名称,可自行更改)
  token-name: Authorization
  # token前缀
  token-prefix: Bearer
  # token有效期，单位s 默认30天, -1代表永不过期
  timeout: 2592000
  # 是否打开自动续签 (如果此值为true, 框架会在每次直接或间接调用 getLoginId() 时进行一次过期检查与续签操作)
  autoRenew: true
  # token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
  activity-timeout: -1
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: false
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: false
  # token风格
  token-style: uuid
  # 是否输出操作日志
  is-log: false
  # jwt秘钥
  jwt-secret-key: TUx8IaslTsibligsqvzLmNvbQECAwQF
  # 是否在初始化配置时打印版本字符画
  is-print: false
  # 登录逻辑缓存和业务逻辑缓存分离
  alone-redis:
    # Redis数据库索引（默认为0）
    database: 2
    # Redis服务器地址
    host: 127.0.0.1
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    password:
    # 连接超时时间
    timeout: 10s

